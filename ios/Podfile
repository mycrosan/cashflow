# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# ConfiguraÃ§Ãµes para resolver problemas de headers nÃ£o-modulares
use_frameworks! :linkage => :static
use_modular_headers!

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # ðŸ”§ VersÃµes estÃ¡veis e compatÃ­veis para resolver o erro da flag -G
  # Testadas e aprovadas para MacBook M4 e iOS 13.0+
  pod 'gRPC-C++', '~> 1.62.0'
  pod 'gRPC-Core', '~> 1.62.0'
  pod 'BoringSSL-GRPC', '~> 0.0.29'

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # ðŸš‘ SOLUÃ‡ÃƒO DEFINITIVA: Remover flag -G de todos os arquivos .xcconfig
  puts "ðŸ”§ Aplicando correÃ§Ãµes para flag -G..."
  Dir.glob("#{installer.sandbox.target_support_files_root}/**/*.xcconfig").each do |config_file|
    content = File.read(config_file)
    original_content = content.dup
    
    # Remove todas as variaÃ§Ãµes da flag -G
    content.gsub!(/-G\s+/, ' ')
    content.gsub!(/-G$/, '')
    content.gsub!(/-G(?=\s)/, '')
    content.gsub!(/\s+-G\s+/, ' ')
    content.gsub!(/\s+-G$/, '')
    
    if content != original_content
      File.write(config_file, content)
      puts "âœ… Flag -G removida de: #{File.basename(config_file)}"
    end
  end
  
  # Configurar saÃ­das para o script "Create Symlinks to Header Folders"
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['SYMROOT'] = '${SRCROOT}/../build/ios'
  end
  
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      # ðŸŽ¯ ConfiguraÃ§Ãµes bÃ¡sicas para todos os targets
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
      config.build_settings['VALID_ARCHS'] = 'arm64'
      config.build_settings['EXCLUDED_ARCHS'] = 'armv7'

      # ðŸ”‡ Suprimir avisos desnecessÃ¡rios
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'

      # ðŸš‘ REMOÃ‡ÃƒO DEFINITIVA DA FLAG -G de todas as configuraÃ§Ãµes
      ['OTHER_CFLAGS', 'OTHER_CXXFLAGS', 'OTHER_LDFLAGS'].each do |flag_key|
        if config.build_settings[flag_key].is_a?(Array)
          config.build_settings[flag_key] = config.build_settings[flag_key].reject { |f| f.to_s.include?('-G') }
        elsif config.build_settings[flag_key].is_a?(String)
          config.build_settings[flag_key] = config.build_settings[flag_key].gsub(/-G\s*/, '').strip
        end
      end

      # ðŸŽ¯ ConfiguraÃ§Ãµes especÃ­ficas para targets problemÃ¡ticos
      if ['BoringSSL-GRPC', 'gRPC-Core', 'gRPC-C++', 'abseil', 'nanopb'].include?(target.name)
        # ForÃ§a o uso do clang padrÃ£o
        config.build_settings['CC'] = '$(DT_TOOLCHAIN_DIR)/usr/bin/clang'
        config.build_settings['CXX'] = '$(DT_TOOLCHAIN_DIR)/usr/bin/clang++'

        # Limpa flags conflitantes
        config.build_settings.delete('OTHER_LDFLAGS')
        config.build_settings.delete('OTHER_CPPFLAGS')
        config.build_settings.delete('GCC_PREPROCESSOR_DEFINITIONS')

        # Define flags seguras
        config.build_settings['OTHER_CFLAGS'] ||= []
        config.build_settings['OTHER_CFLAGS'] += ['-Wno-everything', '-DCOCOAPODS=1']
        config.build_settings['OTHER_CPPFLAGS'] = ['-Wno-everything', '-DCOCOAPODS=1']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = ['COCOAPODS=1', 'GRPC_ARES=0']

        # Remove configs conflitantes
        config.build_settings.delete('CLANG_CXX_LANGUAGE_STANDARD')
        config.build_settings.delete('CLANG_CXX_LIBRARY')
        config.build_settings.delete('GCC_C_LANGUAGE_STANDARD')

        # ðŸ”§ ConfiguraÃ§Ã£o para resolver problemas de headers nÃ£o-modulares
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'

        # ðŸ”§ ConfiguraÃ§Ãµes especÃ­ficas para BoringSSL-GRPC (MacBook M4 otimizado)
        if target.name == 'BoringSSL-GRPC'
          config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'c11'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
          config.build_settings['CLANG_ENABLE_MODULES'] = 'NO'
          
          # ðŸš« Limpar todas as flags problemÃ¡ticas
          config.build_settings.delete('OTHER_CFLAGS')
          config.build_settings.delete('OTHER_CXXFLAGS')
          config.build_settings.delete('OTHER_LDFLAGS')
          
          # âœ… Flags seguras e compatÃ­veis com M4 - separadas para C e C++
          config.build_settings['OTHER_CFLAGS'] = [
            '-Wno-everything',
            '-DCOCOAPODS=1',
            '-DOPENSSL_NO_ASM=1'
          ]
          
          config.build_settings['OTHER_CXXFLAGS'] = [
            '-Wno-everything',
            '-DCOCOAPODS=1',
            '-DOPENSSL_NO_ASM=1'
          ]
          
          # ðŸŽ¯ DefiniÃ§Ãµes de prÃ©-processador otimizadas
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = [
            '$(inherited)',
            'COCOAPODS=1',
            'OPENSSL_NO_ASM=1',
            'BORINGSSL_PREFIX=GRPC'
          ]
        end

        # ðŸ“¦ ConfiguraÃ§Ãµes especÃ­ficas para outros pods
        case target.name
        when 'nanopb'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = [
            '$(inherited)', 'PB_FIELD_32BIT=1', 'PB_NO_PACKED_STRUCTS=1', 'PB_ENABLE_MALLOC=1'
          ]
        when 'printing'
          # ðŸ”‡ Suprimir avisos de keyWindow deprecado
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = [
            '$(inherited)', 'PRINTING_DEPRECATION_WARNINGS_DISABLED=1'
          ]
        when 'GoogleDataTransport'
          config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu11'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
          config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        end
      end
    end
  end

  # ðŸš‘ CORREÃ‡ÃƒO ADICIONAL: Remover flags problemÃ¡ticas dos arquivos de build do BoringSSL-GRPC
  installer.pods_project.targets.each do |target|
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
  end
end

